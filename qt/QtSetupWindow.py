# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'SetupWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QFileDialog

from database.SQLiteAgent import SQLiteAgent
from scripts.path import the_local_path


class UiSetupForm(QtWidgets.QWidget):

    def __init__(self, ):
        super().__init__()

        self.agent = SQLiteAgent()
        self.__initialization_off_all()

    def __initialization_off_all(self):
        self.__gui_initialization()
        self.__load_data()
        self.__set_all_bindings()

    def __gui_initialization(self) -> None:
        self.setObjectName("SetupForm")
        self.resize(700, 150)
        self.setFixedSize(700, 150)

        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("images/analytics.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.setWindowIcon(icon)

        self.formLayoutWidget = QtWidgets.QWidget(self)
        self.formLayoutWidget.setGeometry(QtCore.QRect(0, 0, 684, 106))
        self.formLayoutWidget.setObjectName("formLayoutWidget")

        self.mainFormLayout = QtWidgets.QFormLayout(self.formLayoutWidget)
        self.mainFormLayout.setFieldGrowthPolicy(QtWidgets.QFormLayout.ExpandingFieldsGrow)
        self.mainFormLayout.setContentsMargins(6, 6, 6, 6)
        self.mainFormLayout.setHorizontalSpacing(7)
        self.mainFormLayout.setVerticalSpacing(0)
        self.mainFormLayout.setObjectName("mainFormLayout")

        self.browseFormLayout = QtWidgets.QFormLayout()
        self.browseFormLayout.setVerticalSpacing(4)
        self.browseFormLayout.setObjectName("browseFormLayout")

        self.sourcePushButton = QtWidgets.QPushButton(self.formLayoutWidget)
        self.sourcePushButton.setMinimumSize(QtCore.QSize(125, 0))
        self.sourcePushButton.setObjectName("sourcePushButton")

        self.browseFormLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.sourcePushButton)

        self.sourceLineEdit = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.sourceLineEdit.setMinimumSize(QtCore.QSize(400, 28))
        self.sourceLineEdit.setObjectName("sourceLineEdit")
        self.sourceLineEdit.setReadOnly(True)

        self.browseFormLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.sourceLineEdit)

        self.resultsPushButton = QtWidgets.QPushButton(self.formLayoutWidget)
        self.resultsPushButton.setMinimumSize(QtCore.QSize(125, 0))
        self.resultsPushButton.setObjectName("resultsPushButton")

        self.browseFormLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.resultsPushButton)

        self.namespacePushButton = QtWidgets.QPushButton(self.formLayoutWidget)
        self.namespacePushButton.setMinimumSize(QtCore.QSize(122, 0))
        self.namespacePushButton.setObjectName("namespacePushButton")

        self.browseFormLayout.setWidget(2, QtWidgets.QFormLayout.LabelRole, self.namespacePushButton)

        self.resultLineEdit = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.resultLineEdit.setMinimumSize(QtCore.QSize(0, 28))
        self.resultLineEdit.setObjectName("resultLineEdit")
        self.resultLineEdit.setReadOnly(True)

        self.browseFormLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.resultLineEdit)

        self.namespaceLineEdit = QtWidgets.QLineEdit(self.formLayoutWidget)
        self.namespaceLineEdit.setMinimumSize(QtCore.QSize(0, 28))
        self.namespaceLineEdit.setObjectName("namespaceLineEdit")
        self.namespaceLineEdit.setReadOnly(True)

        self.browseFormLayout.setWidget(2, QtWidgets.QFormLayout.FieldRole, self.namespaceLineEdit)

        self.mainFormLayout.setLayout(0, QtWidgets.QFormLayout.LabelRole, self.browseFormLayout)

        self.checkboxFormLayout = QtWidgets.QFormLayout()
        self.checkboxFormLayout.setContentsMargins(13, 27, 0, 0)
        self.checkboxFormLayout.setHorizontalSpacing(0)
        self.checkboxFormLayout.setVerticalSpacing(8)
        self.checkboxFormLayout.setObjectName("checkboxFormLayout")

        self.checkBoxHint = QtWidgets.QCheckBox(self.formLayoutWidget)
        self.checkBoxHint.setText("")
        self.checkBoxHint.setObjectName("checkBoxHint")

        self.checkboxFormLayout.setWidget(0, QtWidgets.QFormLayout.LabelRole, self.checkBoxHint)

        self.hintLabel = QtWidgets.QLabel(self.formLayoutWidget)
        self.hintLabel.setEnabled(True)
        self.hintLabel.setMaximumSize(QtCore.QSize(110, 16777215))
        self.hintLabel.setObjectName("hintLabel")

        self.checkboxFormLayout.setWidget(0, QtWidgets.QFormLayout.FieldRole, self.hintLabel)

        self.soundLabel = QtWidgets.QLabel(self.formLayoutWidget)
        self.soundLabel.setMaximumSize(QtCore.QSize(110, 16777215))
        self.soundLabel.setObjectName("soundLabel")

        self.checkboxFormLayout.setWidget(1, QtWidgets.QFormLayout.FieldRole, self.soundLabel)

        self.checkBoxSound = QtWidgets.QCheckBox(self.formLayoutWidget)
        self.checkBoxSound.setText("")
        self.checkBoxSound.setObjectName("checkBoxSound")

        self.checkboxFormLayout.setWidget(1, QtWidgets.QFormLayout.LabelRole, self.checkBoxSound)
        self.mainFormLayout.setLayout(0, QtWidgets.QFormLayout.FieldRole, self.checkboxFormLayout)

        self.okPushButton = QtWidgets.QPushButton(self)
        self.okPushButton.setGeometry(QtCore.QRect(10, 110, 93, 28))
        self.okPushButton.setObjectName("okPushButton")

        self.cancelPushButton = QtWidgets.QPushButton(self)
        self.cancelPushButton.setGeometry(QtCore.QRect(110, 110, 93, 28))
        self.cancelPushButton.setObjectName("cancelPushButton")

        self.retranslate_ui()
        QtCore.QMetaObject.connectSlotsByName(self)

    def __load_data(self):
        data = self.agent.read_from_db()
        self.sourceLineEdit.setText(data[1])
        self.resultLineEdit.setText(data[2])
        self.namespaceLineEdit.setText(data[3])
        self.checkBoxHint.setChecked(data[4])
        self.checkBoxSound.setChecked(data[5])

    def retranslate_ui(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("Form", "Setup"))
        self.sourcePushButton.setText(_translate("Form", "Source path"))
        self.resultsPushButton.setText(_translate("Form", "Results path"))
        self.namespacePushButton.setText(_translate("Form", "Namespace file path"))
        self.hintLabel.setText(_translate("Form", "Top Hint"))
        self.soundLabel.setText(_translate("Form", "Sound notification"))
        self.okPushButton.setText(_translate("Form", "OK"))
        self.cancelPushButton.setText(_translate("Form", "Cancel"))

    def __set_all_bindings(self):
        self.namespacePushButton.clicked.connect(lambda: self.__get_path_dialog("namespace"))
        self.sourcePushButton.clicked.connect(lambda: self.__get_path_dialog("source"))
        self.resultsPushButton.clicked.connect(lambda: self.__get_path_dialog("result"))
        self.okPushButton.clicked.connect(lambda: self.__ok_clicked())
        self.cancelPushButton.clicked.connect(lambda: self.__cancel_clicked())

    def __get_path_dialog(self, name):

        if name == "namespace":
            path = the_local_path()
            f_name = QFileDialog.getOpenFileName(self, 'Open namespace file',
                                                 path + "/namespaces", "Text files (*.txt)")
            if f_name[0]:
                self.namespaceLineEdit.setText(f_name[0].replace("/", "\\"))
        elif name == "source":
            path = self.sourceLineEdit.text() if os.path.isdir(self.sourceLineEdit.text()) else the_local_path()
            s_dir = QtWidgets.QFileDialog.getExistingDirectory(self, 'Select source folder:', path,
                                                               QtWidgets.QFileDialog.ShowDirsOnly)
            if s_dir:
                self.sourceLineEdit.setText(s_dir.replace("/", "\\"))
        elif name == "result":
            path = self.resultLineEdit.text() if os.path.isdir(self.resultLineEdit.text()) else the_local_path()
            s_dir = QtWidgets.QFileDialog.getExistingDirectory(self, 'Select results folder:', path,
                                                               QtWidgets.QFileDialog.ShowDirsOnly)
            if s_dir:
                self.resultLineEdit.setText(s_dir.replace("/", "\\"))

    def __ok_clicked(self):
        data = [str(self.sourceLineEdit.text()), str(self.resultLineEdit.text()), str(self.namespaceLineEdit.text()),
                1 if self.checkBoxHint.isChecked() else 0, 1 if self.checkBoxSound.isChecked() else 0]
        self.agent.write_to_db(data)
        self.close()

    def __cancel_clicked(self):
        self.close()

    def closeEvent(self, event):
        event.accept()

    def update_data(self):
        self.__load_data()
